---
version: 1
interactions:
# check connection with /ping
- request:
    url: http://127.0.0.1:2379/ping
    method: GET
  response:
    body: "pong"
    headers:
      Content-Type:
      - text/plain
      - charset=utf-8
    status: 200 OK
    code: 200
# fetch all projects
- request:
    headers:
      Content-Type:
      - application/json
    url: http://127.0.0.1:2379/api/v1/project
    method: GET
  response:
    body: |
      {
        "projects": [
            {
                "name": "project-A",
                "config": {
                    "BAR": "foo"
                },
                "secrets": []
            },
            {
                "name": "project-B",
                "config": {
                    "FOO": "bar"
                },
                "secrets": []
            }
        ]
      }
    headers:
      Content-Type:
      - application/json
    status: 200 OK
    code: 200
# fetch all namespaces in "project-A"
- request:
    headers:
      Content-Type:
      - application/json
    url: http://127.0.0.1:2379/api/v1/project/project-A/namespace
    method: GET
  response:
    body: |
      {
        "namespaces": [
          {
            "name": "namespace-A",
            "config": {}
          }
        ]
      }
    headers:
      Content-Type:
      - application/json
    status: 200 OK
    code: 200
# fetch all jobs in "project-A" with namespace "namespace-A"
- request:
    headers:
      Content-Type:
      - application/json
    url: http://127.0.0.1:2379/api/v1/project/project-A/job?namespace=namespace-A
    method: GET
  response:
    body: |
      {
          "jobs": [
              {
                  "version": 1,
                  "name": "job-A",
                  "owner": "john_doe@example.com",
                  "startDate": "2019-09-16",
                  "endDate": "",
                  "interval": "0 19 * * *",
                  "dependsOnPast": false,
                  "catchUp": false,
                  "taskName": "bq2bq",
                  "config": [
                      {
                          "name": "FOO_A_1",
                          "value": "BAR_A_1"
                      },
                      {
                          "name": "FOO_A_2",
                          "value": "BAR_A_2"
                      }
                  ],
                  "windowSize": "48h",
                  "windowOffset": "24h",
                  "windowTruncateTo": "d",
                  "dependencies": [],
                  "assets": {
                      "query.sql": "SELECT * FROM projectA.datasetB.tableC"
                  },
                  "hooks": [],
                  "description": "sample description for job-A",
                  "labels": {
                      "orchestrator": "optimus"
                  },
                  "behavior": {
                      "retry": {
                          "count": 0,
                          "delay": "0s",
                          "exponentialBackoff": false
                      },
                      "notify": []
                  }
              },
              {
                  "version": 1,
                  "name": "job-B",
                  "owner": "jane_doe@example.com",
                  "startDate": "2021-01-01",
                  "endDate": "",
                  "interval": "0 19 1 * *",
                  "dependsOnPast": false,
                  "catchUp": true,
                  "taskName": "bq2bq",
                  "config": [
                      {
                          "name": "FOO_B_1",
                          "value": "BAR_B_1"
                      },
                      {
                          "name": "FOO_B_2",
                          "value": "BAR_B_2"
                      }
                  ],
                  "windowSize": "720h",
                  "windowOffset": "-720h",
                  "windowTruncateTo": "M",
                  "dependencies": [],
                  "assets": {
                      "query.sql": "SELECT * FROM projectZ.datasetY.tableX"
                  },
                  "hooks": [],
                  "description": "sample description for job-B",
                  "labels": {
                      "orchestrator": "optimus"
                  },
                  "behavior": {
                      "retry": {
                          "count": 0,
                          "delay": "0s",
                          "exponentialBackoff": false
                      },
                      "notify": []
                  }
              }
          ]
      }
    headers:
      Content-Type:
      - application/json
    status: 200 OK
    code: 200
# fetch a task in "job-A" in "namespace-A" in "project-A"
- request:
    headers:
      Content-Type:
      - application/json
    url: http://127.0.0.1:2379/api/v1/project/project-A/namespace/namespace-A/job/job-A/task
    method: GET
  response:
    body: |
      {
        "task": {
          "name": "task-A",
          "description": "task's description",
          "image": "task's image",
          "destination": {
            "destination": "bigquery://dst-project.dst-dataset.dst-table",
            "type": "bigquery"
          },
          "dependencies": [
            {"dependency": "bigquery://src-project.src-dataset.src-table"}
          ]
        }
      }
    headers:
      Content-Type:
      - application/json
    status: 200 OK
    code: 200
# fetch a task in "job-B" in "namespace-A" in "project-A"
- request:
    headers:
      Content-Type:
      - application/json
    url: http://127.0.0.1:2379/api/v1/project/project-A/namespace/namespace-A/job/job-B/task
    method: GET
  response:
    body: |
      {
        "task": {
          "name": "task-B",
          "description": "task's description B",
          "image": "task's image B",
          "destination": {
            "destination": "bigquery://dst-b-project.dst-b-dataset.dst-b-table",
            "type": "bigquery"
          },
          "dependencies": [
            {"dependency": "bigquery://src-b1-project.src-b1-dataset.src-b1-table"},
            {"dependency": "bigquery://src-b2-project.src-b2-dataset.src-b2-table"}
          ]
        }
      }
    headers:
      Content-Type:
      - application/json
    status: 200 OK
    code: 200
